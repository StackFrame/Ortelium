'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.0.3705.0
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.0.
'
Namespace com.bbn.winmap.GetMapService
    
    '<remarks/>
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="GetMapServiceSoap", [Namespace]:="http://winmap.bbn.com/ImageWebService")>  _
    Public Class GetMapService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://winmap.bbn.com/ImageWebService/GetMapService.asmx"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://winmap.bbn.com/ImageWebService/GetMapImage", RequestNamespace:="http://winmap.bbn.com/ImageWebService", ResponseNamespace:="http://winmap.bbn.com/ImageWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMapImage(ByVal strLat As String, ByVal strLon As String, ByVal strScale As String, ByVal strProjType As String, ByVal strHeight As String, ByVal strWidth As String, ByVal strBgColor As String, ByVal strLayers As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetMapImage", New Object() {strLat, strLon, strScale, strProjType, strHeight, strWidth, strBgColor, strLayers})
            Return CType(results(0),Byte())
        End Function
        
        '<remarks/>
        Public Function BeginGetMapImage(ByVal strLat As String, ByVal strLon As String, ByVal strScale As String, ByVal strProjType As String, ByVal strHeight As String, ByVal strWidth As String, ByVal strBgColor As String, ByVal strLayers As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetMapImage", New Object() {strLat, strLon, strScale, strProjType, strHeight, strWidth, strBgColor, strLayers}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetMapImage(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://winmap.bbn.com/ImageWebService/PanMap", RequestNamespace:="http://winmap.bbn.com/ImageWebService", ResponseNamespace:="http://winmap.bbn.com/ImageWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PanMap(ByVal strLat As String, ByVal strLon As String, ByVal strScale As String, ByVal strProjType As String, ByVal strHeight As String, ByVal strWidth As String, ByVal strBgColor As String, ByVal strAzimuth As String, ByVal strLayers As String) As String()
            Dim results() As Object = Me.Invoke("PanMap", New Object() {strLat, strLon, strScale, strProjType, strHeight, strWidth, strBgColor, strAzimuth, strLayers})
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        Public Function BeginPanMap(ByVal strLat As String, ByVal strLon As String, ByVal strScale As String, ByVal strProjType As String, ByVal strHeight As String, ByVal strWidth As String, ByVal strBgColor As String, ByVal strAzimuth As String, ByVal strLayers As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("PanMap", New Object() {strLat, strLon, strScale, strProjType, strHeight, strWidth, strBgColor, strAzimuth, strLayers}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndPanMap(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://winmap.bbn.com/ImageWebService/RecenterMap", RequestNamespace:="http://winmap.bbn.com/ImageWebService", ResponseNamespace:="http://winmap.bbn.com/ImageWebService", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecenterMap(ByVal strLat As String, ByVal strLon As String, ByVal strScale As String, ByVal strProjType As String, ByVal strHeight As String, ByVal strWidth As String, ByVal strBgColor As String, ByVal strX As String, ByVal strY As String, ByVal strLayers As String) As String()
            Dim results() As Object = Me.Invoke("RecenterMap", New Object() {strLat, strLon, strScale, strProjType, strHeight, strWidth, strBgColor, strX, strY, strLayers})
            Return CType(results(0),String())
        End Function
        
        '<remarks/>
        Public Function BeginRecenterMap(ByVal strLat As String, ByVal strLon As String, ByVal strScale As String, ByVal strProjType As String, ByVal strHeight As String, ByVal strWidth As String, ByVal strBgColor As String, ByVal strX As String, ByVal strY As String, ByVal strLayers As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RecenterMap", New Object() {strLat, strLon, strScale, strProjType, strHeight, strWidth, strBgColor, strX, strY, strLayers}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndRecenterMap(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
    End Class
End Namespace
