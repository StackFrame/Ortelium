<?xml version="1.0"?>
<project name="OpenMap_Base" default="all.openmap" basedir=".">

	<!--  ############################
	Set up the different builds.
	############################ -->

	<target name="init.openmap" description="Sets properties needed by the OpenMap code targets.">
		<tstamp />

		<property name="openmap.home" value="../.." />
		<property name="openmap.class_dir" value="${openmap.home}/classes" />
		<property name="openmap.classes" value="${openmap.class_dir}/openmap" />
		<property name="openmap.src" value="${openmap.home}/src/openmap" />
		<property name="openmap.jar" value="${openmap.home}/lib/openmap.jar" />
		<property name="openmap.src_ext" value="${openmap.home}/src/ext" />
		<property name="openmap.docs" value="${openmap.home}/doc" />

		<property name="general.excludes" value="**/*.in, **/Makefile, **/*.bat,
							 **/ChangeLog, **/*.html, **/*.txt,
							 **/*.*.txt, **/*.dat,
							 **/*.pl,
							 **/unimplemented/**, 
							 **/build.xml" />

		<property name="javac.excludes" value="${general.excludes}, 
						       **/*.gif,
						       **/*.png, 
						       **/*.properties" />

		<property name="jai.includes" value="**/jai/**, **/geotiff/**" />

		<property name="jar.excludes" value="${general.excludes}, **/*.java" />
		<available classname="com.sun.media.jai.codec.ImageCodec" property="do.jai">
			<classpath refid="ext_tools_classpath" />
		</available>
		<echo message="do.jai = ${do.jai}" />

		<echo message="Java Home: ${java.home}" />
	</target>

	<!--  ############################
	      End of property setup.
	      ############################ -->

	<!--  ############################
	      Main targets
	      ############################ -->

	<target name="all.openmap" depends="classes.openmap, jar.openmap" description="Compiles standard OpenMap classes and creates the jar files." />

	<target name="classes" depends="classes.openmap" />

	<target name="jar.openmap" depends="init.openmap" description="Builds jar files, placing them in the lib directory.">

		<jar jarfile="${openmap.jar}" basedir="${openmap.classes}" manifest="${openmap.home}/share/manifest.txt" index="true" includes="openmap.properties,
			 **/*.class,
			 **/*.gif, **/*.png,
			 **/*.properties" />
	</target>

	<!--  ############################
	ext relies on OpenMap Debug class - but we need to build it first.
	############################ -->
	<target name="debug" depends="init.openmap">
		<mkdir dir="${openmap.classes}" />
		<javac srcdir="${openmap.src}" destdir="${openmap.classes}" debug="on" includes="com/bbn/openmap/util/Debug.java">
			<classpath refid="ext_tools_classpath" />
		</javac>
	</target>

	<!--  ############################
	Build all the packages that OpenMap code depends on, that are
	from other people.
	############################ -->
	<target name="ext" depends="debug" description="Compiles the ext classes that OpenMap needs.">
		<javac srcdir="${openmap.src_ext}" destdir="${openmap.classes}" debug="on" excludes="${javac.excludes},${jai.includes}" source="1.5" target="1.5">
			<classpath refid="ext_tools_classpath" />
		</javac>
	</target>

	<target name="jai" depends="ext" description="Compiles the ext classes that OpenMap needs that depend on JAI." if="do.jai">
		<javac srcdir="${openmap.src_ext}" destdir="${openmap.classes}" debug="on" includes="${jai.includes}" source="1.5" target="1.5">
			<classpath refid="ext_tools_classpath" />
		</javac>
		<javac srcdir="${openmap.src}" destdir="${openmap.classes}" debug="on" includes="${jai.includes}" source="1.5" target="1.5">
			<classpath refid="ext_tools_classpath" />
		</javac>

		<copy todir="${openmap.classes}">
			<fileset dir="${openmap.src_ext}" includes="**/*.properties" />
		</copy>

	</target>

	<!--  ############################
	Standard target, to build everything you can.
	############################ -->
	<target name="classes.openmap" depends="jai" description="Compiles the OpenMap classes.  Ext classes compiled if needed.">
		<javac srcdir="${openmap.src}" destdir="${openmap.classes}" debug="on" excludes="${javac.excludes},${jai.includes}" source="1.5" target="1.5">
			<classpath refid="ext_tools_classpath" />
		</javac>

		<!-- Copy the gifs and other resources to the new classpath. -->
		<copy todir="${openmap.classes}" file="${openmap.home}/openmap.properties" />
		<copy todir="${openmap.classes}/com/bbn/openmap">
			<fileset dir="${openmap.src}/com/bbn/openmap" includes="**/*.gif, **/*.png, **/*.properties" />
		</copy>

	</target>

	<!--  ############################
	Build the documentation.
	############################ -->
	<target name="docs.openmap" depends="init.openmap" description="Make the javadoc API html documents.">
		<javadoc sourcepath="${openmap.src}:${openmap.src_ext}" destdir="${openmap.docs}/api" maxmemory="256m" excludepackagenames="**unimplemented**" packagenames="com.bbn.openmap.*, Acme.*, dopplet.*, edu.*" author="true" version="true" use="true" windowtitle="OpenMap API" doctitle="OpenMap" bottom="Copyright (C) BBNT Solutions LLC; See http://openmap.bbn.com/ for details">
			<classpath refid="ext_tools_classpath" />
		</javadoc>
	</target>

	<!--  ############################
	Cleanup targets
	############################ -->
	<target name="clean_all.openmap" depends="clean.openmap, clean_docs.openmap" description="Delete jar files, class files, and generated documentation." />

	<target name="clean.openmap" depends="distclean.openmap, clean_jars.openmap" description="Delete jar files and all class files" />

	<target name="distclean.openmap" depends="init.openmap" description="Delete class files, but not the jar files.">
		<delete dir="${openmap.classes}" />
	</target>

	<target name="clean_jars.openmap" description="Delete only the jar files from the lib directory.">
		<delete file="${openmap.jar}" />
	</target>

	<target name="clean_docs.openmap" depends="init.openmap" description="Delete only the generated API documentation.">
		<delete>
			<fileset dir="${openmap.docs}/api" includes="**/*.html,
				     **/stylesheet.css, 
				     **/package-list" excludes="doc-index.html" />
		</delete>
		<delete dir="${openmap.docs}/api/com" />
		<delete dir="${openmap.docs}/api/Acme" />
		<delete dir="${openmap.docs}/api/edu" />
	</target>

	<!--  ############################
	End of cleanup targets.
	############################ -->

</project>

