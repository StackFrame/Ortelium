<!DOCTYPE web-app 
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN" 
    "http://java.sun.com/j2ee/dtds/web-app_2_2.dtd">

<web-app>

    <!-- General description of your web application -->

    <display-name>Development Tools for VPF Data</display-name>
    <description>
      These are some test code I wrote to familiarize myself
      with servlets, and to hopefully do something vaguely
      useful at the same time. The included servlet code can
      print VPF data.
    </description>

    <!-- this parameter is not used -->
    <context-param>
      <param-name>webmaster</param-name>
      <param-value>myaddress@mycompany.com</param-value>
      <description>
        The EMAIL address of the administrator to whom questions
        and comments about this application should be addressed.
      </description>
    </context-param>

    <!--
    Any parameter with a name beginning with
    "com.bbn.openmap.vpfservlet.vpf_library." will be interpreted as a path to
    the root of a VPF database. The servlets will first try and resolve the
    path within the webapp directory, and if not found there, will try the
    path as an absolute path.  If either of these paths are found, the library
    will be added to the list of available databases on the servlet home page.
    If neither of the paths work, the library will not be listed, and an error
    logged in the servlet logs.
    -->

    <context-param>
      <param-name>com.bbn.openmap.vpfservlet.vpf_library.dnc13</param-name>
      <param-value>dnc13</param-value>
      <description>
        DNC data, being accessed with a relative path.  The dnc13 directory
        could be included as part of the .war file.
      </description>
    </context-param>

    <context-param>
      <param-name>com.bbn.openmap.vpfservlet.vpf_library.dnc13a</param-name>
      <param-value>d:/data/dnc13</param-value>
      <description>
	DNC data, being accessed with an absolute path.
      </description>
    </context-param>

    <context-param>
      <param-name>com.bbn.openmap.vpfservlet.vpf_library.noamer</param-name>
      <param-value>d:/data/VMAPLV0</param-value>
      <description>
        VMAP Level 0 North America Data.
      </description>
    </context-param>

    <!-- Servlet definitions for the VPF browse webapp -->
    <servlet>
      <servlet-name>Dispatch</servlet-name>
      <description>
        This servlet is the entry doing for most of the work, it looks at file
        names and redirects to the appropriate specialized servlet class.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.DispatchServlet</servlet-class>
    </servlet>

    <servlet>
      <servlet-name>DirectoryList</servlet-name>
      <description>
        This servlet generates directory listings.  It should be constrained to
        listing directories within the configured libraries in this file,
        but feel free to set the listDirectories parameter below to false if
        the capability makes you nervous.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.DirectoryServlet</servlet-class>
      <init-param>
        <param-name>listDirectories</param-name>
        <param-value>true</param-value>
      </init-param>
    </servlet>

    <servlet>
      <servlet-name>DescribeVPF</servlet-name>
      <description>
	This servlet describes a VPF database, roughly the html equivelent of
        the DescribeDB class in the VPF layer.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.DescribeDBServlet</servlet-class>
    </servlet>

    <servlet>
      <servlet-name>Schema</servlet-name>
      <description>
        This servlet displays schema info.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.Schema</servlet-class>
    </servlet>

    <servlet>
      <servlet-name>Data</servlet-name>
      <description>
        This servlet displays table data.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.Data</servlet-class>
    </servlet>

    <servlet>
      <servlet-name>DocFile</servlet-name>
      <description>
        This servlet displays documentation file data.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.DocFileServlet</servlet-class>
    </servlet>

    <servlet>
      <servlet-name>Thematic</servlet-name>
      <description>
        This servlet displays thematic index file data.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.ThematicIndexServlet</servlet-class>
    </servlet>

    <servlet>
      <servlet-name>SpatialIndex</servlet-name>
      <description>
        This servlet displays spatial index file data.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.SpatialIndexServlet</servlet-class>
    </servlet>
    <servlet>
      <servlet-name>SpatialGraphic</servlet-name>
      <description>
        This servlet was intended to provide a graphical representation of the
        data in a spatial index file.  For now it doesnt do anything useful.
      </description>
      <servlet-class>com.bbn.openmap.vpfservlet.SpatialGraphicServlet</servlet-class>
    </servlet>

    <!-- Define the mapping from URL path to servlet -->
    <!-- Unless you are modifying the code, you should not need to modify these -->

    <servlet-mapping>
      <servlet-name>Dispatch</servlet-name>
      <url-pattern>/UnknownType/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>Dispatch</servlet-name>
      <url-pattern>/UnknownType</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>DescribeVPF</servlet-name>
      <url-pattern>/DescribeVPF/*</url-pattern>
    </servlet-mapping>
    <!-- map the database list as the webapp home page -->
    <servlet-mapping>
      <servlet-name>DescribeVPF</servlet-name>
      <url-pattern>/</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>Schema</servlet-name>
      <url-pattern>/Schema</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>DocFile</servlet-name>
      <url-pattern>/DocFile</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>DocFile</servlet-name>
      <url-pattern>/DocFile/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>DirectoryList</servlet-name>
      <url-pattern>/DirectoryList</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>DirectoryList</servlet-name>
      <url-pattern>/DirectoryList/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>Thematic</servlet-name>
      <url-pattern>/Thematic</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>Thematic</servlet-name>
      <url-pattern>/Thematic/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>SpatialIndex</servlet-name>
      <url-pattern>/SpatialIndex</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
      <servlet-name>SpatialGraphic</servlet-name>
      <url-pattern>/SpatialGraphic</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>SpatialIndex</servlet-name>
      <url-pattern>/SpatialIndex/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
      <servlet-name>SpatialGraphic</servlet-name>
      <url-pattern>/SpatialGraphic/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>Data</servlet-name>
      <url-pattern>/Data</url-pattern>
    </servlet-mapping>


    <!-- Define the default session timeout for your application,
         in minutes.  From a servlet or JSP page, you can modify
         the timeout for a particular session dynamically by using
         HttpSession.getMaxInactiveInterval(). -->

    <session-config>
      <session-timeout>30</session-timeout>    <!-- 30 minutes -->
    </session-config>

</web-app>
